@model WebApplication1.ViewModels.userRegistration

@{
    
    if (Session["userName"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
    ViewBag.Title = "Add User";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}
<style>
    .label-danger {
        color: #ff0000;
    }

    input[type=submit] {
        padding: 5px 15px;
        background: #ccc;
        border: 0 none;
        cursor: pointer;
        -webkit-border-radius: 5px;
        border-radius: 5px;
    }
</style>
<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
<link href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css" rel="stylesheet" />
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"></script>
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/purchase.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        
        $(function () {
            var $j = jQuery.noConflict();
            $j('#deliveryDate').datepicker({
                dateFormat: 'yy/mm/dd'
            })
        });
        chooseCompany();
    });

    function chooseCompany() {
        var e = document.getElementById("companyCode");
        var value = e.value;
        var text = e.options[e.selectedIndex].text;
        $('#count').val(value);
    }

</script>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-10">
                <h2>User Registration</h2>
                <span class="label label-danger">@ViewBag.Message</span>
                <hr />
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passwordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.passwordHash, new { htmlAttributes = new { @class = "form-control", @type = "password"} })
                @Html.ValidationMessageFor(model => model.passwordHash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.Company_CD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="form-group">
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Company_CD, (IEnumerable<SelectListItem>)ViewBag.CompanyList, new { @class = "form-control", id = "companyCode", onclick = "chooseCompany()" })
                @*@Html.DropDownList("CompanyList", null, new { @class = "form-control", id = "custCode", onclick = "chooseCompany()" })*@
            </div>   
        </div>
            <div class="form-group">
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Company_CD, new { htmlAttributes = new { @class = "form-control", @id = "count" , @disabled = "disabled"} })
                    @Html.ValidationMessageFor(model => model.Company_CD, "", new { @class = "text-danger" })

                </div>
            </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.ROLES, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.ROLES, new List<SelectListItem>
                       {
                           new SelectListItem {Text = "Administrator", Value = "Administrator", Selected = true },
                           new SelectListItem {Text = "Sales", Value = "Sales" },
                           new SelectListItem {Text = "User", Value = "User" },

                       }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ROLES, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-dark" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/purchase.js"></script>
