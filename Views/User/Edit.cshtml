@model WebApplication1.Models.SBS_COMS_USER

@{
    ViewBag.Title = "Edit";
    if (Session["userName"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
    if (Session["roles"].ToString() != "Administrator")
    {
        Response.Redirect("~/User/notAuthorized");
    }
    else
    {
        ViewBag.Title = "User Management";
    }
    
    
}




<style>
    .label-danger {
        color: #ff0000;
    }

    input[type=submit] {
        padding: 5px 15px;
        background: #ccc;
        border: 0 none;
        cursor: pointer;
        -webkit-border-radius: 5px;
        border-radius: 5px;
    }

    input.largerCheckbox { 
            width: 40px; 
            height: 40px; 
        } 
</style>

<script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
<link href="https://code.jquery.com/ui/1.12.0/themes/smoothness/jquery-ui.css" rel="stylesheet" />
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"></script>

<script src="~/Scripts/purchase.js"></script>
<script type="text/javascript">
    function chooseCompany() {
        var e = document.getElementById("companyCode");
        var value = e.value;
        var text = e.options[e.selectedIndex].text;
        $('#count').val(value);
    }

    $(document).ready(function () {
        $(function () {
            var $j = jQuery.noConflict();
            $j('#deliveryDate').datepicker({
                dateFormat: 'yy/mm/dd'
            })
        });
       

        $("#SaveData").bind("click", function () {
            var answer = window.confirm('Save the data ?');
            if (!answer) {
                return;
            }


        });
    });
</script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <div class="col-10">
            <h2>Edit</h2>
            <span class="label label-danger">@ViewBag.Message</span>
            <hr />
        </div>
    </div>
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="card-body">
            <div class="form-group col">
                @Html.LabelFor(model => model.UserName, "Username",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                  
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.PasswordHash, "Password",  htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" }, @type = "password" })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                @Html.LabelFor(model => model.Company_CD, "Company" ,htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="form-group col">
                    <div class="form-group row">
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Company_CD, (IEnumerable<SelectListItem>)ViewBag.CompanyList, new { @class = "form-control", id = "companyCode", onclick = "chooseCompany()" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Company_CD, new { htmlAttributes = new { @class = "form-control", @id = "count", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.Company_CD, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group col">
                @Html.LabelFor(model => model.AccessFailedCount,"Failed count", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col">
                    <div class="form-group row">
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.AccessFailedCount, "Failed count", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-4">
                            @if(Model != null)
                            {
                            @Html.CheckBox("LockoutEnabled", Model.LockoutEnabled == "1", new { htmlAttributes = new { @class = "form-control largerCheckbox", @checked = "checked" } })
                            } 
                            @Html.LabelFor(model => model.LockoutEnabled,"Locked")
                            @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group col">
                @Html.LabelFor(model => model.ISACTIVE, "Status" ,htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ISACTIVE, new List<SelectListItem>
                       {
                           new SelectListItem {Text = "Active", Value = "1", Selected = true },
                           new SelectListItem {Text = "Inactive", Value = "0" },

                       }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ISACTIVE, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col">
                @Html.LabelFor(model => model.ROLES, "Role",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ROLES, new List<SelectListItem>
                       {
                           new SelectListItem {Text = "Administrator", Value = "Administrator", Selected = true },
                           new SelectListItem {Text = "Sales", Value = "Sales" },
                           new SelectListItem {Text = "User", Value = "User" },

                       }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ROLES, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" id="SaveData" class="btn btn-dark" />
                </div>
            </div>
        </div><!-- /.Card body-->

    </div>
}
<div class="form-group">
    <div class="col-10">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<style>
    input[type=submit] {
        padding: 5px 15px;
        background: #ccc;
        border: 0 none;
        cursor: pointer;
        -webkit-border-radius: 5px;
        border-radius: 5px;
    }
</style>
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/purchase.js"></script>*@
